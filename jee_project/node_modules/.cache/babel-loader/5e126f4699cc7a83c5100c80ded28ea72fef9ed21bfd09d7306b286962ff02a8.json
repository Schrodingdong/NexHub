{"ast":null,"code":"import { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.js';\nfunction getOS() {\n  if (typeof window === \"undefined\") {\n    return \"undetermined\";\n  }\n  const {\n    userAgent\n  } = window.navigator;\n  const macosPlatforms = /(Macintosh)|(MacIntel)|(MacPPC)|(Mac68K)/i;\n  const windowsPlatforms = /(Win32)|(Win64)|(Windows)|(WinCE)/i;\n  const iosPlatforms = /(iPhone)|(iPad)|(iPod)/i;\n  if (macosPlatforms.test(userAgent)) {\n    return \"macos\";\n  }\n  if (iosPlatforms.test(userAgent)) {\n    return \"ios\";\n  }\n  if (windowsPlatforms.test(userAgent)) {\n    return \"windows\";\n  }\n  if (/Android/i.test(userAgent)) {\n    return \"android\";\n  }\n  if (/Linux/i.test(userAgent)) {\n    return \"linux\";\n  }\n  return \"undetermined\";\n}\nfunction useOs() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    getValueInEffect: true\n  };\n  const [value, setValue] = useState(options.getValueInEffect ? \"undetermined\" : getOS());\n  useIsomorphicEffect(() => {\n    if (options.getValueInEffect) {\n      setValue(getOS);\n    }\n  }, []);\n  return value;\n}\nexport { useOs };","map":{"version":3,"names":["getOS","window","userAgent","navigator","macosPlatforms","windowsPlatforms","iosPlatforms","test","useOs","options","arguments","length","undefined","getValueInEffect","value","setValue","useState","useIsomorphicEffect"],"sources":["/Users/ilhamab/Desktop/jee/jee_project/node_modules/@mantine/hooks/src/use-os/use-os.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\n\nexport type OS = 'undetermined' | 'macos' | 'ios' | 'windows' | 'android' | 'linux';\n\nfunction getOS(): OS {\n  if (typeof window === 'undefined') {\n    return 'undetermined';\n  }\n\n  const { userAgent } = window.navigator;\n  const macosPlatforms = /(Macintosh)|(MacIntel)|(MacPPC)|(Mac68K)/i;\n  const windowsPlatforms = /(Win32)|(Win64)|(Windows)|(WinCE)/i;\n  const iosPlatforms = /(iPhone)|(iPad)|(iPod)/i;\n\n  if (macosPlatforms.test(userAgent)) {\n    return 'macos';\n  }\n  if (iosPlatforms.test(userAgent)) {\n    return 'ios';\n  }\n  if (windowsPlatforms.test(userAgent)) {\n    return 'windows';\n  }\n  if (/Android/i.test(userAgent)) {\n    return 'android';\n  }\n  if (/Linux/i.test(userAgent)) {\n    return 'linux';\n  }\n\n  return 'undetermined';\n}\n\ninterface UseOsOptions {\n  getValueInEffect: boolean;\n}\n\nexport function useOs(options: UseOsOptions = { getValueInEffect: true }): OS {\n  const [value, setValue] = useState<OS>(options.getValueInEffect ? 'undetermined' : getOS());\n\n  useIsomorphicEffect(() => {\n    if (options.getValueInEffect) {\n      setValue(getOS);\n    }\n  }, []);\n\n  return value;\n}\n"],"mappings":";;AAEA,SAASA,KAAKA,CAAA,EAAG;EACf,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC,OAAO,cAAc;EACzB;EACE,MAAM;IAAEC;EAAS,CAAE,GAAGD,MAAM,CAACE,SAAS;EACtC,MAAMC,cAAc,GAAG,2CAA2C;EAClE,MAAMC,gBAAgB,GAAG,oCAAoC;EAC7D,MAAMC,YAAY,GAAG,yBAAyB;EAC9C,IAAIF,cAAc,CAACG,IAAI,CAACL,SAAS,CAAC,EAAE;IAClC,OAAO,OAAO;EAClB;EACE,IAAII,YAAY,CAACC,IAAI,CAACL,SAAS,CAAC,EAAE;IAChC,OAAO,KAAK;EAChB;EACE,IAAIG,gBAAgB,CAACE,IAAI,CAACL,SAAS,CAAC,EAAE;IACpC,OAAO,SAAS;EACpB;EACE,IAAI,UAAU,CAACK,IAAI,CAACL,SAAS,CAAC,EAAE;IAC9B,OAAO,SAAS;EACpB;EACE,IAAI,QAAQ,CAACK,IAAI,CAACL,SAAS,CAAC,EAAE;IAC5B,OAAO,OAAO;EAClB;EACE,OAAO,cAAc;AACvB;AACO,SAASM,KAAKA,CAAA,EAAuC;EAAA,IAAtCC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEG,gBAAgB,EAAE;EAAI,CAAE;EACxD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAACP,OAAO,CAACI,gBAAgB,GAAG,cAAc,GAAGb,KAAK,EAAE,CAAC;EACvFiB,mBAAmB,CAAC,MAAM;IACxB,IAAIR,OAAO,CAACI,gBAAgB,EAAE;MAC5BE,QAAQ,CAACf,KAAK,CAAC;IACrB;EACA,CAAG,EAAE,EAAE,CAAC;EACN,OAAOc,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}