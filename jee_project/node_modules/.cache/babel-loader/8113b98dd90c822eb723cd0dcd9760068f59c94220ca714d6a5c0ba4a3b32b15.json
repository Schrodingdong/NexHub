{"ast":null,"code":"import { useReducer } from 'react';\nfunction useToggle() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [false, true];\n  const [[option], toggle] = useReducer((state, action) => {\n    const value = action instanceof Function ? action(state[0]) : action;\n    const index = Math.abs(state.indexOf(value));\n    return state.slice(index).concat(state.slice(0, index));\n  }, options);\n  return [option, toggle];\n}\nexport { useToggle };","map":{"version":3,"names":["useToggle","options","arguments","length","undefined","option","toggle","useReducer","state","action","value","Function","index","Math","abs","indexOf","slice","concat"],"sources":["/Users/ilhamab/Desktop/jee/jee_project/node_modules/@mantine/hooks/src/use-toggle/use-toggle.ts"],"sourcesContent":["import { useReducer } from 'react';\n\nexport function useToggle<T = boolean>(options: readonly T[] = [false, true] as any) {\n  const [[option], toggle] = useReducer((state: T[], action: React.SetStateAction<T>) => {\n    const value = action instanceof Function ? action(state[0]) : action;\n    const index = Math.abs(state.indexOf(value));\n\n    return state.slice(index).concat(state.slice(0, index));\n  }, options as T[]);\n\n  return [option, toggle as (value?: React.SetStateAction<T>) => void] as const;\n}\n"],"mappings":";AACO,SAASA,SAASA,CAAA,EAA0B;EAAA,IAAzBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,KAAK,EAAE,IAAI,CAAC;EAC/C,MAAM,CAAC,CAACG,MAAM,CAAC,EAAEC,MAAM,CAAC,GAAGC,UAAU,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAK;IACvD,MAAMC,KAAK,GAAGD,MAAM,YAAYE,QAAQ,GAAGF,MAAM,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGC,MAAM;IACpE,MAAMG,KAAK,GAAGC,IAAI,CAACC,GAAG,CAACN,KAAK,CAACO,OAAO,CAACL,KAAK,CAAC,CAAC;IAC5C,OAAOF,KAAK,CAACQ,KAAK,CAACJ,KAAK,CAAC,CAACK,MAAM,CAACT,KAAK,CAACQ,KAAK,CAAC,CAAC,EAAEJ,KAAK,CAAC,CAAC;EAC3D,CAAG,EAAEX,OAAO,CAAC;EACX,OAAO,CAACI,MAAM,EAAEC,MAAM,CAAC;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}