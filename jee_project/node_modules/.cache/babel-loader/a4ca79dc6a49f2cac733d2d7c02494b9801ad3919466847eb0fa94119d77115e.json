{"ast":null,"code":"import { useState } from 'react';\nfunction useQueue(_ref) {\n  let {\n    initialValues = [],\n    limit\n  } = _ref;\n  const [{\n    state,\n    queue\n  }, setState] = useState({\n    state: initialValues.slice(0, limit),\n    queue: initialValues.slice(limit)\n  });\n  const add = function () {\n    for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n      items[_key] = arguments[_key];\n    }\n    return setState(current => {\n      const results = [...current.state, ...current.queue, ...items];\n      return {\n        state: results.slice(0, limit),\n        queue: results.slice(limit)\n      };\n    });\n  };\n  const update = fn => setState(current => {\n    const results = fn([...current.state, ...current.queue]);\n    return {\n      state: results.slice(0, limit),\n      queue: results.slice(limit)\n    };\n  });\n  const cleanQueue = () => setState(current => ({\n    state: current.state,\n    queue: []\n  }));\n  return {\n    state,\n    queue,\n    add,\n    update,\n    cleanQueue\n  };\n}\nexport { useQueue };","map":{"version":3,"names":["useQueue","_ref","initialValues","limit","state","queue","setState","useState","slice","add","_len","arguments","length","items","Array","_key","current","results","update","fn","cleanQueue"],"sources":["/Users/ilhamab/Desktop/jee/jee_project/node_modules/@mantine/hooks/src/use-queue/use-queue.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function useQueue<T>({ initialValues = [], limit }: { initialValues?: T[]; limit: number }) {\n  const [{ state, queue }, setState] = useState({\n    state: initialValues.slice(0, limit),\n    queue: initialValues.slice(limit),\n  });\n\n  const add = (...items: T[]) =>\n    setState((current) => {\n      const results = [...current.state, ...current.queue, ...items];\n\n      return {\n        state: results.slice(0, limit),\n        queue: results.slice(limit),\n      };\n    });\n\n  const update = (fn: (state: T[]) => T[]) =>\n    setState((current) => {\n      const results = fn([...current.state, ...current.queue]);\n\n      return {\n        state: results.slice(0, limit),\n        queue: results.slice(limit),\n      };\n    });\n\n  const cleanQueue = () => setState((current) => ({ state: current.state, queue: [] }));\n\n  return {\n    state,\n    queue,\n    add,\n    update,\n    cleanQueue,\n  };\n}\n"],"mappings":";AACO,SAASA,QAAQA,CAAAC,IAAA,EAAgC;EAAA,IAA/B;IAAEC,aAAa,GAAG,EAAE;IAAEC;EAAK,CAAE,GAAAF,IAAA;EACpD,MAAM,CAAC;IAAEG,KAAK;IAAEC;EAAK,CAAE,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC;IAC5CH,KAAK,EAAEF,aAAa,CAACM,KAAK,CAAC,CAAC,EAAEL,KAAK,CAAC;IACpCE,KAAK,EAAEH,aAAa,CAACM,KAAK,CAACL,KAAK;EACpC,CAAG,CAAC;EACF,MAAMM,GAAG,GAAG,SAAAA,CAAA;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAIC,KAAK,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAALF,KAAK,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAA,OAAKT,QAAQ,CAAEU,OAAO,IAAK;MAC9C,MAAMC,OAAO,GAAG,CAAC,GAAGD,OAAO,CAACZ,KAAK,EAAE,GAAGY,OAAO,CAACX,KAAK,EAAE,GAAGQ,KAAK,CAAC;MAC9D,OAAO;QACLT,KAAK,EAAEa,OAAO,CAACT,KAAK,CAAC,CAAC,EAAEL,KAAK,CAAC;QAC9BE,KAAK,EAAEY,OAAO,CAACT,KAAK,CAACL,KAAK;MAChC,CAAK;IACL,CAAG,CAAC;EAAA;EACF,MAAMe,MAAM,GAAIC,EAAE,IAAKb,QAAQ,CAAEU,OAAO,IAAK;IAC3C,MAAMC,OAAO,GAAGE,EAAE,CAAC,CAAC,GAAGH,OAAO,CAACZ,KAAK,EAAE,GAAGY,OAAO,CAACX,KAAK,CAAC,CAAC;IACxD,OAAO;MACLD,KAAK,EAAEa,OAAO,CAACT,KAAK,CAAC,CAAC,EAAEL,KAAK,CAAC;MAC9BE,KAAK,EAAEY,OAAO,CAACT,KAAK,CAACL,KAAK;IAChC,CAAK;EACL,CAAG,CAAC;EACF,MAAMiB,UAAU,GAAGA,CAAA,KAAMd,QAAQ,CAAEU,OAAO,KAAM;IAAEZ,KAAK,EAAEY,OAAO,CAACZ,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAE,CAAC,CAAC;EACrF,OAAO;IACLD,KAAK;IACLC,KAAK;IACLI,GAAG;IACHS,MAAM;IACNE;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}