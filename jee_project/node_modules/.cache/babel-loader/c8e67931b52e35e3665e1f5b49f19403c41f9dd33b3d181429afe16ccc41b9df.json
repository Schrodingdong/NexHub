{"ast":null,"code":"import React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { ChipGroupProvider } from '../ChipGroup.context.js';\nconst defaultProps = {};\nfunction ChipGroup(props) {\n  const {\n    value,\n    defaultValue,\n    onChange,\n    multiple,\n    children\n  } = useComponentDefaultProps(\"ChipGroup\", defaultProps, props);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: multiple ? [] : null,\n    onChange\n  });\n  const isChipSelected = val => Array.isArray(_value) ? _value.includes(val) : val === _value;\n  const handleChange = event => {\n    const val = event.currentTarget.value;\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter(v => v !== val) : [..._value, val]);\n    } else {\n      setValue(val);\n    }\n  };\n  return /* @__PURE__ */React.createElement(ChipGroupProvider, {\n    value: {\n      isChipSelected,\n      onChange: handleChange,\n      multiple\n    }\n  }, children);\n}\nChipGroup.displayName = \"@mantine/core/ChipGroup\";\nexport { ChipGroup };","map":{"version":3,"names":["defaultProps","ChipGroup","props","value","defaultValue","onChange","multiple","children","useComponentDefaultProps","_value","setValue","useUncontrolled","finalValue","isChipSelected","val","Array","isArray","includes","handleChange","event","currentTarget","filter","v","React","createElement","ChipGroupProvider","displayName"],"sources":["/Users/ilhamab/Desktop/jee/jee_project/node_modules/@mantine/core/src/Chip/ChipGroup/ChipGroup.tsx"],"sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { ChipGroupProvider } from '../ChipGroup.context';\n\nexport interface ChipGroupProps<T extends boolean = false> {\n  /** Allow multiple values to be selected at a time */\n  multiple?: T;\n\n  /** Controlled component value */\n  value?: T extends true ? string[] : string;\n\n  /** Uncontrolled component initial value */\n  defaultValue?: T extends true ? string[] : string;\n\n  /** Called when value changes */\n  onChange?(value: T extends true ? string[] : string): void;\n\n  /** <Chip /> components */\n  children?: React.ReactNode;\n}\n\nconst defaultProps: Partial<ChipGroupProps<false>> = {};\n\nexport function ChipGroup<T extends boolean>(props: ChipGroupProps<T>) {\n  const { value, defaultValue, onChange, multiple, children } = useComponentDefaultProps(\n    'ChipGroup',\n    defaultProps as any,\n    props\n  );\n\n  const [_value, setValue] = useUncontrolled<string | string[]>({\n    value,\n    defaultValue,\n    finalValue: multiple ? [] : null,\n    onChange,\n  });\n\n  const isChipSelected = (val: string) =>\n    Array.isArray(_value) ? _value.includes(val) : val === _value;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = event.currentTarget.value;\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter((v) => v !== val) : [..._value, val]);\n    } else {\n      setValue(val);\n    }\n  };\n\n  return (\n    <ChipGroupProvider value={{ isChipSelected, onChange: handleChange, multiple }}>\n      {children}\n    </ChipGroupProvider>\n  );\n}\n\nChipGroup.displayName = '@mantine/core/ChipGroup';\n"],"mappings":";;;;AAIA,MAAMA,YAAY,GAAG,EAAE;AAChB,SAASC,SAASA,CAACC,KAAK,EAAE;EAC/B,MAAM;IAAEC,KAAK;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAQ,CAAE,GAAGC,wBAAwB,CAAC,WAAW,EAAER,YAAY,EAAEE,KAAK,CAAC;EACxH,MAAM,CAACO,MAAM,EAAEC,QAAQ,CAAC,GAAGC,eAAe,CAAC;IACzCR,KAAK;IACLC,YAAY;IACZQ,UAAU,EAAEN,QAAQ,GAAG,EAAE,GAAG,IAAI;IAChCD;EACJ,CAAG,CAAC;EACF,MAAMQ,cAAc,GAAIC,GAAG,IAAKC,KAAK,CAACC,OAAO,CAACP,MAAM,CAAC,GAAGA,MAAM,CAACQ,QAAQ,CAACH,GAAG,CAAC,GAAGA,GAAG,KAAKL,MAAM;EAC7F,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAML,GAAG,GAAGK,KAAK,CAACC,aAAa,CAACjB,KAAK;IACrC,IAAIY,KAAK,CAACC,OAAO,CAACP,MAAM,CAAC,EAAE;MACzBC,QAAQ,CAACD,MAAM,CAACQ,QAAQ,CAACH,GAAG,CAAC,GAAGL,MAAM,CAACY,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKR,GAAG,CAAC,GAAG,CAAC,GAAGL,MAAM,EAAEK,GAAG,CAAC,CAAC;IACzF,CAAK,MAAM;MACLJ,QAAQ,CAACI,GAAG,CAAC;IACnB;EACA,CAAG;EACD,sBAAuBS,KAAK,CAACC,aAAa,CAACC,iBAAiB,EAAE;IAC5DtB,KAAK,EAAE;MAAEU,cAAc;MAAER,QAAQ,EAAEa,YAAY;MAAEZ;IAAQ;EAC7D,CAAG,EAAEC,QAAQ,CAAC;AACd;AACAN,SAAS,CAACyB,WAAW,GAAG,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}