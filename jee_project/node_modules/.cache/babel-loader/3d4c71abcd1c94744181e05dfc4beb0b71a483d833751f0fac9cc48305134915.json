{"ast":null,"code":"import { useState } from 'react';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction useListState() {\n  let initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  const [state, setState] = useState(initialValue);\n  const append = function () {\n    for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n      items[_key] = arguments[_key];\n    }\n    return setState(current => [...current, ...items]);\n  };\n  const prepend = function () {\n    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      items[_key2] = arguments[_key2];\n    }\n    return setState(current => [...items, ...current]);\n  };\n  const insert = function (index) {\n    for (var _len3 = arguments.length, items = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      items[_key3 - 1] = arguments[_key3];\n    }\n    return setState(current => [...current.slice(0, index), ...items, ...current.slice(index)]);\n  };\n  const apply = fn => setState(current => current.map((item, index) => fn(item, index)));\n  const remove = function () {\n    for (var _len4 = arguments.length, indices = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      indices[_key4] = arguments[_key4];\n    }\n    return setState(current => current.filter((_, index) => !indices.includes(index)));\n  };\n  const pop = () => setState(current => {\n    const cloned = [...current];\n    cloned.pop();\n    return cloned;\n  });\n  const shift = () => setState(current => {\n    const cloned = [...current];\n    cloned.shift();\n    return cloned;\n  });\n  const reorder = _ref => {\n    let {\n      from,\n      to\n    } = _ref;\n    return setState(current => {\n      const cloned = [...current];\n      const item = current[from];\n      cloned.splice(from, 1);\n      cloned.splice(to, 0, item);\n      return cloned;\n    });\n  };\n  const setItem = (index, item) => setState(current => {\n    const cloned = [...current];\n    cloned[index] = item;\n    return cloned;\n  });\n  const setItemProp = (index, prop, value) => setState(current => {\n    const cloned = [...current];\n    cloned[index] = __spreadProps(__spreadValues({}, cloned[index]), {\n      [prop]: value\n    });\n    return cloned;\n  });\n  const applyWhere = (condition, fn) => setState(current => current.map((item, index) => condition(item, index) ? fn(item, index) : item));\n  const filter = fn => {\n    setState(current => current.filter(fn));\n  };\n  return [state, {\n    setState,\n    append,\n    prepend,\n    insert,\n    pop,\n    shift,\n    apply,\n    applyWhere,\n    remove,\n    reorder,\n    setItem,\n    setItemProp,\n    filter\n  }];\n}\nexport { useListState };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","useListState","initialValue","arguments","length","undefined","state","setState","useState","append","_len","items","Array","_key","current","prepend","_len2","_key2","insert","index","_len3","_key3","slice","apply","fn","map","item","remove","_len4","indices","_key4","filter","_","includes","pop","cloned","shift","reorder","_ref","from","to","splice","setItem","setItemProp","applyWhere","condition"],"sources":["/Users/ilhamab/Desktop/jee/jee_project/node_modules/@mantine/hooks/src/use-list-state/use-list-state.ts"],"sourcesContent":["import React, { useState } from 'react';\n\nexport interface UseListStateHandlers<T> {\n  setState: React.Dispatch<React.SetStateAction<T[]>>;\n  append: (...items: T[]) => void;\n  prepend: (...items: T[]) => void;\n  insert: (index: number, ...items: T[]) => void;\n  pop: () => void;\n  shift: () => void;\n  apply: (fn: (item: T, index?: number) => T) => void;\n  applyWhere: (\n    condition: (item: T, index: number) => boolean,\n    fn: (item: T, index?: number) => T\n  ) => void;\n  remove: (...indices: number[]) => void;\n  reorder: ({ from, to }: { from: number; to: number }) => void;\n  setItem: (index: number, item: T) => void;\n  setItemProp: <K extends keyof T, U extends T[K]>(index: number, prop: K, value: U) => void;\n  filter: (fn: (item: T, i: number) => boolean) => void;\n}\n\nexport type UseListState<T> = [T[], UseListStateHandlers<T>];\n\nexport function useListState<T>(initialValue: T[] = []): UseListState<T> {\n  const [state, setState] = useState(initialValue);\n\n  const append = (...items: T[]) => setState((current) => [...current, ...items]);\n  const prepend = (...items: T[]) => setState((current) => [...items, ...current]);\n\n  const insert = (index: number, ...items: T[]) =>\n    setState((current) => [...current.slice(0, index), ...items, ...current.slice(index)]);\n\n  const apply = (fn: (item: T, index?: number) => T) =>\n    setState((current) => current.map((item, index) => fn(item, index)));\n\n  const remove = (...indices: number[]) =>\n    setState((current) => current.filter((_, index) => !indices.includes(index)));\n\n  const pop = () =>\n    setState((current) => {\n      const cloned = [...current];\n      cloned.pop();\n      return cloned;\n    });\n\n  const shift = () =>\n    setState((current) => {\n      const cloned = [...current];\n      cloned.shift();\n      return cloned;\n    });\n\n  const reorder = ({ from, to }: { from: number; to: number }) =>\n    setState((current) => {\n      const cloned = [...current];\n      const item = current[from];\n\n      cloned.splice(from, 1);\n      cloned.splice(to, 0, item);\n\n      return cloned;\n    });\n\n  const setItem = (index: number, item: T) =>\n    setState((current) => {\n      const cloned = [...current];\n      cloned[index] = item;\n      return cloned;\n    });\n\n  const setItemProp = <K extends keyof T, U extends T[K]>(index: number, prop: K, value: U) =>\n    setState((current) => {\n      const cloned = [...current];\n      cloned[index] = { ...cloned[index], [prop]: value };\n      return cloned;\n    });\n\n  const applyWhere = (\n    condition: (item: T, index: number) => boolean,\n    fn: (item: T, index?: number) => T\n  ) =>\n    setState((current) =>\n      current.map((item, index) => (condition(item, index) ? fn(item, index) : item))\n    );\n\n  const filter = (fn: (item: T, i: number) => boolean) => {\n    setState((current) => current.filter(fn));\n  };\n\n  return [\n    state,\n    {\n      setState,\n      append,\n      prepend,\n      insert,\n      pop,\n      shift,\n      apply,\n      applyWhere,\n      remove,\n      reorder,\n      setItem,\n      setItemProp,\n      filter,\n    },\n  ];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}